{"ast":null,"code":"var _jsxFileName = \"/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateLoginFormObject, loginToApp, setRegistrationMode, registerUser } from '../actions';\n\nconst LoginForm = ({\n  username,\n  password,\n  email,\n  loginstate,\n  mode,\n  handleChange,\n  handleRegisterClick,\n  handleLoginClick\n}) => {\n  return React.createElement(\"div\", {\n    id: \"login-form\",\n    className: \"card bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Login Form\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: 'text',\n    name: 'username',\n    onChange: handleChange,\n    placeholder: 'user name',\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    hidden: mode === 'login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: 'text',\n    name: 'email',\n    onChange: handleChange,\n    placeholder: 'Email',\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: 'text',\n    name: 'password',\n    onChange: handleChange,\n    placeholder: 'password',\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))))), React.createElement(\"input\", {\n    type: 'button',\n    value: \"Login\",\n    className: \"btn btn-primary\",\n    hidden: mode === 'register',\n    onClick: e => handleLoginClick(e, username, password, loginstate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: 'button',\n    value: \"Register\",\n    className: \"btn btn-primary\",\n    onClick: e => handleRegisterClick(e, username, password, email, loginstate, mode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};\n\nLoginForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(\"MODE: \" + JSON.stringify(state.login));\n  return {\n    username: state.login.username,\n    password: state.login.password,\n    email: state.login.email,\n    loginstate: state.login.loginstate,\n    mode: state.login.mode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: e => {\n      const field_name = e.currentTarget.name;\n      const field_value = e.currentTarget.value;\n      dispatch(updateLoginFormObject(field_name, field_value));\n    },\n    handleLoginClick: (e, username, password, loginstate) => {\n      if (username === null || username.length === 0 || password === null || password.length === 0) {\n        alert(\"username and password are required!\");\n        return;\n      } else {\n        console.log(\"in LoginForm.handleLoginClick: \");\n        dispatch(loginToApp(dispatch, username, password, loginstate));\n      }\n    },\n    handleRegisterClick: (e, username, password, email, loginstate, mode) => {\n      if (mode === 'login') {\n        dispatch(setRegistrationMode());\n        return;\n      } // if mode = 'register'\n\n\n      if (username === null || username.length === 0 || password === null || password.length === 0 || email === null || email.length === 0) {\n        alert(\"username, password and email are required!\");\n        return;\n      } else {\n        console.log(\"in LoginForm.handleRegisterClick: \");\n        dispatch(registerUser(dispatch, username, password, email));\n      }\n    }\n  };\n};\n\nconst VisibleLoginForm = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\nexport default VisibleLoginForm;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/Login.js"],"names":["React","connect","PropTypes","updateLoginFormObject","loginToApp","setRegistrationMode","registerUser","LoginForm","username","password","email","loginstate","mode","handleChange","handleRegisterClick","handleLoginClick","e","propTypes","string","isRequired","mapStateToProps","state","console","log","JSON","stringify","login","mapDispatchToProps","dispatch","field_name","currentTarget","name","field_value","value","length","alert","VisibleLoginForm"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { updateLoginFormObject, loginToApp, setRegistrationMode, registerUser } from '../actions'\n\nconst LoginForm = ({ username, password, email, loginstate, mode, handleChange, handleRegisterClick, handleLoginClick }) => {\n  \n  return (\n    <div id='login-form' className=\"card bg-light\">\n        <div>\n            <h4 className=\"card-header\">Login Form</h4>\n            <form >\n                <table className=\"table\" ><tbody>\n                    <tr>\n                        <td>Name:</td>\n                        <td><input type={'text'} name={'username'} onChange={handleChange} \n                             placeholder={'user name'}\n                             value={username} /></td>\n                    </tr>\n                    <tr hidden={mode === 'login'}>\n                        <td>Email:</td>\n                        <td><input type={'text'} name={'email'} onChange={handleChange} \n                             placeholder={'Email'}\n                             value={email} /></td>\n                    </tr>                    \n                    <tr>\n                        <td>Password:</td>\n                        <td><input type={'text'} name={'password'} onChange={handleChange} \n                             placeholder={'password'}\n                             value={password}/></td>\n                    </tr>                   \n                </tbody></table>\n                <input type={'button'} value=\"Login\" className = 'btn btn-primary' hidden={mode === 'register'}\n                    onClick={ (e)=>handleLoginClick(e, username, password, loginstate) }  />\n                <input type={'button'} value=\"Register\" className = 'btn btn-primary'\n                    onClick={ (e)=>handleRegisterClick(e, username, password, email, loginstate, mode) }  />                    \n            </form>\n        </div>  \n    </div>\n)}\n\nLoginForm.propTypes = {\n    username: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"MODE: \" + JSON.stringify(state.login));\n  return {\n    username: state.login.username,\n    password: state.login.password,\n    email: state.login.email,\n    loginstate: state.login.loginstate,\n    mode: state.login.mode\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChange: (e) => {\n      const field_name = e.currentTarget.name;\n      const field_value = e.currentTarget.value;\n\n      dispatch(updateLoginFormObject(field_name, field_value));\n    },\n    handleLoginClick: (e, username, password, loginstate) => {\n      if (username === null || username.length === 0 || password === null || password.length === 0) {\n        alert(\"username and password are required!\");\n        return;\n      } else {\n        console.log(\"in LoginForm.handleLoginClick: \");\n        dispatch(loginToApp(dispatch, username, password, loginstate));\n      }\n    },\n    handleRegisterClick: (e, username, password, email, loginstate, mode) => {\n      if(mode === 'login'){\n        dispatch(setRegistrationMode());\n        return;\n      }\n      // if mode = 'register'\n      if (username === null || username.length === 0 \n          || password === null || password.length === 0\n          || email === null || email.length === 0) {\n        alert(\"username, password and email are required!\");\n        return;\n      } else {\n        console.log(\"in LoginForm.handleRegisterClick: \");\n        dispatch(registerUser(dispatch, username, password, email));\n      }\n    }\n  }\n}\n\nconst VisibleLoginForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm)\n\nexport default VisibleLoginForm"]},"metadata":{},"sourceType":"module"}