{"ast":null,"code":"var _jsxFileName = \"/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/CustomerForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateCustomerFormObject } from '../actions';\nimport { updateCustomerFormUsage } from '../actions';\nimport { addCustomer, selectCustomer } from '../actions';\nimport RestAPI from '../rest';\nimport { deleteCustomer } from '../actions';\nlet restapi = null;\n\nconst CustomerForm = ({\n  customer,\n  usage,\n  handleChange,\n  handleCustomerEditClick,\n  handleEditCancelClick,\n  handleCustomerSaveClick,\n  handleCustomerDeleteClick\n}) => React.createElement(\"div\", {\n  id: \"customer-form\",\n  className: \"card bg-light\",\n  hidden: usage === 'none',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Add or Edit a User/Customer\")), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"table\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Name:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'name',\n  onChange: handleChange,\n  placeholder: 'Customer name',\n  value: customer.name,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Email:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'email',\n  onChange: handleChange,\n  placeholder: 'Email',\n  value: customer.email,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Password:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'password',\n  onChange: handleChange,\n  placeholder: 'password',\n  value: customer.password,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}))))), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Delete\",\n  onClick: e => handleCustomerDeleteClick(e, customer),\n  hidden: usage === 'none' || usage === 'view' || usage === 'add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Save\",\n  onClick: e => handleCustomerSaveClick(e, customer),\n  hidden: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Cancel\",\n  onClick: e => handleEditCancelClick(e, customer),\n  hidden: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Edit\",\n  onClick: e => handleCustomerEditClick(e, customer),\n  hidden: usage === 'none' || usage === 'edit' || usage === 'add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}))));\n\nCustomerForm.propTypes = {\n  customer: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  restapi = new RestAPI(state.login.token);\n  return {\n    customer: state.formState.customer,\n    usage: state.formState.usage,\n    appState: state.appState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: e => {\n      const field_name = e.currentTarget.name;\n      const field_value = e.currentTarget.value;\n      dispatch(updateCustomerFormObject(field_name, field_value));\n    },\n    handleCustomerEditClick: (event, customer, usage) => {\n      console.log(\"in CustomerForm.handleCustomerEditClick\");\n      dispatch(updateCustomerFormUsage('edit', customer));\n    },\n    handleEditCancelClick: (event, customer, usage) => {\n      console.log(\"in CustomerForm.handleEditCancelClick\");\n\n      if (usage === 'add') {\n        dispatch(updateCustomerFormUsage('none'));\n      } else if (usage === 'edit') {\n        dispatch(updateCustomerFormUsage('view', customer));\n      }\n    },\n    handleCustomerSaveClick: (event, customer, usage) => {\n      console.log(\"in CustomerForm.handleCustomerSaveClick\");\n      dispatch(addCustomer(customer));\n\n      if (usage === 'add') {\n        dispatch(selectCustomer(customer));\n      }\n\n      dispatch(updateCustomerFormUsage('none'));\n      restapi.putCustomer(dispatch, customer);\n    },\n    handleCustomerDeleteClick: (event, customer) => {\n      console.log(\"in CustomerForm.handleCustomerDeleteClick\");\n      console.log(\"customer: \" + JSON.stringify(customer));\n      dispatch(deleteCustomer(customer));\n      dispatch(updateCustomerFormUsage('none'));\n      restapi.deleteCustomer(dispatch, customer);\n    }\n  };\n};\n\nconst VisibleCustomerForm = connect(mapStateToProps, mapDispatchToProps)(CustomerForm);\nexport default VisibleCustomerForm;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/CustomerForm.js"],"names":["React","connect","PropTypes","updateCustomerFormObject","updateCustomerFormUsage","addCustomer","selectCustomer","RestAPI","deleteCustomer","restapi","CustomerForm","customer","usage","handleChange","handleCustomerEditClick","handleEditCancelClick","handleCustomerSaveClick","handleCustomerDeleteClick","name","email","password","e","propTypes","shape","string","isRequired","mapStateToProps","state","login","token","formState","appState","mapDispatchToProps","dispatch","field_name","currentTarget","field_value","value","event","console","log","putCustomer","JSON","stringify","VisibleCustomerForm"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateCustomerFormObject } from '../actions'\r\nimport { updateCustomerFormUsage } from '../actions'\r\nimport { addCustomer, selectCustomer } from '../actions'\r\nimport RestAPI from '../rest';\r\nimport { deleteCustomer } from '../actions'\r\nlet restapi = null;\r\n\r\nconst CustomerForm = ({ customer, usage, handleChange, handleCustomerEditClick, \r\n                    handleEditCancelClick, handleCustomerSaveClick, \r\n                    handleCustomerDeleteClick }) => (\r\n    <div id='customer-form' className='card bg-light' hidden={ usage === 'none'}>\r\n        <div>\r\n            <div className='card-header'>\r\n            <h4>Add or Edit a User/Customer</h4>\r\n            </div>\r\n            <form >\r\n                <table className='table'><tbody>\r\n                    <tr>\r\n                        <td>Name:</td>\r\n                        <td><input type={'text'} name={'name'} onChange={handleChange} \r\n                             placeholder={'Customer name'}\r\n                             value={customer.name} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email:</td>\r\n                        <td><input type={'text'} name={'email'} onChange={handleChange} \r\n                             placeholder={'Email'}\r\n                             value={customer.email} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Password:</td>\r\n                        <td><input type={'text'} name={'password'} onChange={handleChange} \r\n                             placeholder={'password'}\r\n                             value={customer.password} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>                     \r\n                </tbody></table>\r\n                <input type={'button'} value=\"Delete\" \r\n                    onClick={ (e)=>handleCustomerDeleteClick(e, customer) } \r\n                    hidden={usage ==='none' || usage === 'view' || usage === 'add' } />\r\n                <input type={'button'} value=\"Save\" onClick={ (e)=>handleCustomerSaveClick(e, customer) } hidden={ usage === 'none' || usage === 'view'} />\r\n                <input type={'button'} value=\"Cancel\" onClick={ (e)=>handleEditCancelClick(e, customer) } hidden={ usage === 'none' || usage === 'view'} />\r\n                <input type={'button'} value=\"Edit\" onClick={ (e)=>handleCustomerEditClick(e, customer) } hidden={ usage === 'none' || usage === 'edit' || usage === 'add'} />\r\n            </form>\r\n        </div>  \r\n    </div>\r\n)\r\n\r\nCustomerForm.propTypes = {\r\n  customer:  PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired\r\n  }).isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  restapi = new RestAPI(state.login.token);\r\n  return {\r\n    customer: state.formState.customer,\r\n    usage: state.formState.usage,\r\n    appState: state.appState\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { \r\n    handleChange: (e) => {\r\n        const field_name = e.currentTarget.name;\r\n        const field_value = e.currentTarget.value;\r\n        dispatch( updateCustomerFormObject( field_name, field_value ));\r\n    },\r\n    handleCustomerEditClick: (event, customer, usage) => {\r\n        console.log(\"in CustomerForm.handleCustomerEditClick\");\r\n        dispatch( updateCustomerFormUsage('edit', customer) );        \r\n    },\r\n    handleEditCancelClick: (event, customer, usage) => {\r\n        console.log(\"in CustomerForm.handleEditCancelClick\");\r\n        if(usage === 'add'){\r\n          dispatch( updateCustomerFormUsage('none') );\r\n        }else if(usage === 'edit'){\r\n          dispatch( updateCustomerFormUsage('view', customer) );\r\n        }     \r\n    },\r\n    handleCustomerSaveClick: (event, customer, usage) => {\r\n        console.log(\"in CustomerForm.handleCustomerSaveClick\");\r\n        dispatch(addCustomer(customer));\r\n        if(usage === 'add'){\r\n            dispatch(selectCustomer(customer));\r\n        }\r\n        dispatch(updateCustomerFormUsage('none'));\r\n        restapi.putCustomer(dispatch, customer);\r\n    },\r\n    handleCustomerDeleteClick: (event, customer) => {\r\n        console.log(\"in CustomerForm.handleCustomerDeleteClick\");\r\n        console.log(\"customer: \" + JSON.stringify(customer));\r\n        dispatch(deleteCustomer(customer));\r\n        dispatch(updateCustomerFormUsage('none')); \r\n        restapi.deleteCustomer(dispatch, customer);       \r\n    }             \r\n  }\r\n}\r\n\r\nconst VisibleCustomerForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CustomerForm)\r\n\r\nexport default VisibleCustomerForm"]},"metadata":{},"sourceType":"module"}