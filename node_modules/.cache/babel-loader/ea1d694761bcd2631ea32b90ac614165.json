{"ast":null,"code":"var _jsxFileName = \"/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/EventForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateEventFormObject } from '../actions';\nimport { updateEventFormUsage } from '../actions';\nimport { addEvent, selectEvent } from '../actions';\nimport RestAPI from '../rest';\nimport { deleteEvent } from '../actions';\nconst restapi = new RestAPI();\n\nconst EventForm = ({\n  event,\n  usage,\n  handleChange,\n  handleEventEditClick,\n  handleEditCancelClick,\n  handleEventSaveClick,\n  handleEventDeleteClick\n}) => React.createElement(\"div\", {\n  id: \"event-form\",\n  className: \"card bg-light\",\n  hidden: usage === 'none',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  className: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Add or Modify an Event\"), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"table\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Code:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'code',\n  onChange: handleChange,\n  placeholder: 'Event code',\n  value: event.code,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Title:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'title',\n  onChange: handleChange,\n  placeholder: 'Title',\n  value: event.title,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Description:\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: 'text',\n  name: 'description',\n  onChange: handleChange,\n  placeholder: 'Description',\n  value: event.description,\n  disabled: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}))))), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Delete\",\n  onClick: e => handleEventDeleteClick(e, event),\n  hidden: usage === 'none' || usage === 'view' || usage === 'add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Save\",\n  onClick: e => handleEventSaveClick(e, event),\n  hidden: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Cancel\",\n  onClick: e => handleEditCancelClick(e, event),\n  hidden: usage === 'none' || usage === 'view',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: 'button',\n  value: \"Edit\",\n  onClick: e => handleEventEditClick(e, event),\n  hidden: usage === 'none' || usage === 'edit' || usage === 'add',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))));\n\nEventForm.propTypes = {\n  event: PropTypes.shape({\n    code: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    event: state.formState.event,\n    usage: state.formState.usage,\n    appState: state.appState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: e => {\n      const field_name = e.currentTarget.name;\n      const field_value = e.currentTarget.value;\n      dispatch(updateEventFormObject(field_name, field_value));\n    },\n    handleEventEditClick: (e, event, usage) => {\n      console.log(\"in EventForm.handleEventEditClick\");\n      dispatch(updateEventFormUsage('edit', event));\n    },\n    handleEditCancelClick: (e, event, usage) => {\n      console.log(\"in EventForm.handleEditCancelClick\");\n      dispatch(updateEventFormUsage('view', event));\n    },\n    handleEventSaveClick: (e, event, usage) => {\n      console.log(\"in EventForm.handleEventSaveClick\");\n      dispatch(addEvent(event));\n\n      if (usage === 'add') {\n        dispatch(selectEvent(event));\n      }\n\n      dispatch(updateEventFormUsage('none'));\n      restapi.putEvent(dispatch, event);\n    },\n    handleEventDeleteClick: (e, event) => {\n      console.log(\"in EventForm.handleEventDeleteClick\");\n      console.log(\"event: \" + JSON.stringify(event));\n      dispatch(deleteEvent(event));\n      dispatch(updateEventFormUsage('none'));\n      restapi.deleteEvent(dispatch, event);\n    }\n  };\n};\n\nconst VisibleEventForm = connect(mapStateToProps, mapDispatchToProps)(EventForm);\nexport default VisibleEventForm;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/EventForm.js"],"names":["React","connect","PropTypes","updateEventFormObject","updateEventFormUsage","addEvent","selectEvent","RestAPI","deleteEvent","restapi","EventForm","event","usage","handleChange","handleEventEditClick","handleEditCancelClick","handleEventSaveClick","handleEventDeleteClick","code","title","description","e","propTypes","shape","string","isRequired","mapStateToProps","state","formState","appState","mapDispatchToProps","dispatch","field_name","currentTarget","name","field_value","value","console","log","putEvent","JSON","stringify","VisibleEventForm"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateEventFormObject } from '../actions'\r\nimport { updateEventFormUsage } from '../actions'\r\nimport { addEvent, selectEvent } from '../actions'\r\nimport RestAPI from '../rest';\r\nimport { deleteEvent } from '../actions'\r\nconst restapi = new RestAPI();\r\n\r\nconst EventForm = ({ event, usage, handleChange, handleEventEditClick, \r\n                    handleEditCancelClick, handleEventSaveClick, \r\n                    handleEventDeleteClick }) => (\r\n    <div id='event-form' className=\"card bg-light\" hidden={ usage === 'none'}>\r\n        <div>\r\n            <h4 className=\"card-header\">Add or Modify an Event</h4>\r\n            <form >\r\n                <table className=\"table\" ><tbody>\r\n                    <tr>\r\n                        <td>Code:</td>\r\n                        <td><input type={'text'} name={'code'} onChange={handleChange} \r\n                             placeholder={'Event code'}\r\n                             value={event.code} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Title:</td>\r\n                        <td><input type={'text'} name={'title'} onChange={handleChange} \r\n                             placeholder={'Title'}\r\n                             value={event.title} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Description:</td>\r\n                        <td><input type={'text'} name={'description'} onChange={handleChange} \r\n                             placeholder={'Description'}\r\n                             value={event.description} disabled={usage==='none'||usage==='view'} /></td>\r\n                    </tr>                    \r\n                </tbody></table>\r\n                <input type={'button'} value=\"Delete\" \r\n                    onClick={ (e)=>handleEventDeleteClick(e, event) } \r\n                    hidden={usage ==='none' || usage === 'view' || usage === 'add' } />\r\n                <input type={'button'} value=\"Save\" onClick={ (e)=>handleEventSaveClick(e, event) } hidden={ usage === 'none' || usage === 'view'} />\r\n                <input type={'button'} value=\"Cancel\" onClick={ (e)=>handleEditCancelClick(e, event) } hidden={ usage === 'none' || usage === 'view'} />\r\n                <input type={'button'} value=\"Edit\" onClick={ (e)=>handleEventEditClick(e, event) } hidden={ usage === 'none' || usage === 'edit' || usage === 'add'} />\r\n            </form>\r\n        </div>  \r\n    </div>\r\n)\r\n\r\nEventForm.propTypes = {\r\n  event:  PropTypes.shape({\r\n    code: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  }).isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.formState.event,\r\n    usage: state.formState.usage,\r\n    appState: state.appState\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { \r\n    handleChange: (e) => {\r\n        const field_name = e.currentTarget.name;\r\n        const field_value = e.currentTarget.value;\r\n        dispatch( updateEventFormObject( field_name, field_value ));\r\n    },\r\n    handleEventEditClick: (e, event, usage) => {\r\n        console.log(\"in EventForm.handleEventEditClick\");\r\n        dispatch( updateEventFormUsage('edit', event) );        \r\n    },\r\n    handleEditCancelClick: (e, event, usage) => {\r\n        console.log(\"in EventForm.handleEditCancelClick\");\r\n        dispatch( updateEventFormUsage('view', event) );        \r\n    },\r\n    handleEventSaveClick: (e, event, usage) => {\r\n        console.log(\"in EventForm.handleEventSaveClick\");\r\n        dispatch(addEvent(event));\r\n        if(usage === 'add'){\r\n            dispatch(selectEvent(event));\r\n        }\r\n        dispatch(updateEventFormUsage('none'));\r\n        restapi.putEvent(dispatch, event);\r\n    },\r\n    handleEventDeleteClick: (e, event) => {\r\n        console.log(\"in EventForm.handleEventDeleteClick\");\r\n        console.log(\"event: \" + JSON.stringify(event));\r\n        dispatch(deleteEvent(event));\r\n        dispatch(updateEventFormUsage('none')); \r\n        restapi.deleteEvent(dispatch, event);       \r\n    }             \r\n  }\r\n}\r\n\r\nconst VisibleEventForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EventForm)\r\n\r\nexport default VisibleEventForm"]},"metadata":{},"sourceType":"module"}