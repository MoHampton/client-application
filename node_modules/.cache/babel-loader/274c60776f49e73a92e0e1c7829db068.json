{"ast":null,"code":"/* Login Actions */\nexport const updateLoginFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_LOGIN_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n};\nexport const setRegistrationMode = () => {\n  return {\n    type: 'SET_REGISTRATION_MODE'\n  };\n};\nexport const registerUser = (dispatch, username, password, email) => {\n  return {\n    type: 'REGISTER_USER',\n    dispatch,\n    username,\n    password,\n    email\n  };\n};\nexport const loginToApp = (dispatch, username, password, loginstate) => {\n  return {\n    type: 'LOGIN_TO_APP',\n    dispatch,\n    username,\n    password,\n    loginstate\n  };\n};\nexport const logOut = dispatch => {\n  return {\n    type: 'LOG_OUT',\n    dispatch\n  };\n};\nexport const getJWTToken = (dispatch, username, password) => {\n  return {\n    type: 'GET_JWT_TOKEN',\n    dispatch,\n    username,\n    password\n  };\n};\nexport const loginSucceeded = token => {\n  return {\n    type: 'LOGIN_SUCCESS',\n    token\n  };\n};\nexport const loginFailed = () => {\n  return {\n    type: 'LOGIN_FAILED'\n  };\n};\n/* REGISTRATION ACTIONS */\n\nexport const applyRegistrationsUpdate = registrations => {\n  return {\n    type: 'APPLY_REGISTRATIONS_UPDATE',\n    registrations\n  };\n};\nexport const selectRegistration = registration => {\n  return {\n    type: 'SELECT_REGISTRATION',\n    registration\n  };\n};\nexport const addRegistration = registration => {\n  return {\n    type: 'ADD_REGISTRATION',\n    registration\n  };\n};\nexport const getRegistrations = dispatch => {\n  return {\n    type: 'GET_REGISTRATIONS',\n    dispatch\n  };\n};\nexport const deleteRegistration = registration => {\n  return {\n    type: 'DELETE_REGISTRATION',\n    registration\n  };\n};\nexport const addRegistrationInit = registration => {\n  return {\n    type: 'ADD_REGISTRATION_INIT',\n    registration\n  };\n};\nexport const updateRegistrationFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_REGISTRATION_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n}; // accepted values for usage: 'view', 'add', 'update'\n\nexport const updateRegistrationFormUsage = (usage, registration) => {\n  return {\n    type: 'UPDATE_REGISTRATION_FORM_USAGE',\n    usage: usage,\n    registration: registration\n  };\n};\n/* EVENT ACTIONS */\n\nexport const applyEventsUpdate = events => {\n  return {\n    type: 'APPLY_EVENTS_UPDATE',\n    events\n  };\n};\nexport const selectEvent = event => {\n  return {\n    type: 'SELECT_EVENT',\n    event\n  };\n};\nexport const addEvent = event => {\n  return {\n    type: 'ADD_EVENT',\n    event\n  };\n};\nexport const getEvents = dispatch => {\n  return {\n    type: 'GET_EVENTS',\n    dispatch\n  };\n};\nexport const deleteEvent = event => {\n  return {\n    type: 'DELETE_EVENT',\n    event\n  };\n};\nexport const addEventInit = event => {\n  return {\n    type: 'ADD_EVENT_INIT',\n    event\n  };\n};\nexport const updateEventFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_EVENT_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n}; // accepted values for usage: 'view', 'add', 'update'\n\nexport const updateEventFormUsage = (usage, event) => {\n  return {\n    type: 'UPDATE_EVENT_FORM_USAGE',\n    usage: usage,\n    event: event\n  };\n};\n/* CUSTOMER ACTIONS */\n\nexport const applyCustomersUpdate = customers => {\n  return {\n    type: 'APPLY_CUSTOMERS_UPDATE',\n    customers\n  };\n};\nexport const selectCustomer = customer => {\n  return {\n    type: 'SELECT_CUSTOMER',\n    customer\n  };\n};\nexport const addCustomer = customer => {\n  return {\n    type: 'ADD_CUSTOMER',\n    customer\n  };\n};\nexport const getCustomers = dispatch => {\n  return {\n    type: 'GET_CUSTOMERS',\n    dispatch\n  };\n};\nexport const deleteCustomer = customer => {\n  return {\n    type: 'DELETE_CUSTOMER',\n    customer\n  };\n};\nexport const addCustomerInit = customer => {\n  return {\n    type: 'ADD_CUSTOMER_INIT',\n    customer\n  };\n};\nexport const updateCustomerFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_CUSTOMER_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n}; // accepted values for usage: 'view', 'add', 'update'\n\nexport const updateCustomerFormUsage = (usage, customer) => {\n  return {\n    type: 'UPDATE_CUSTOMER_FORM_USAGE',\n    usage: usage,\n    customer: customer\n  };\n};","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/actions/index.js"],"names":["updateLoginFormObject","field_name","field_value","type","setRegistrationMode","registerUser","dispatch","username","password","email","loginToApp","loginstate","logOut","getJWTToken","loginSucceeded","token","loginFailed","applyRegistrationsUpdate","registrations","selectRegistration","registration","addRegistration","getRegistrations","deleteRegistration","addRegistrationInit","updateRegistrationFormObject","updateRegistrationFormUsage","usage","applyEventsUpdate","events","selectEvent","event","addEvent","getEvents","deleteEvent","addEventInit","updateEventFormObject","updateEventFormUsage","applyCustomersUpdate","customers","selectCustomer","customer","addCustomer","getCustomers","deleteCustomer","addCustomerInit","updateCustomerFormObject","updateCustomerFormUsage"],"mappings":"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","sourcesContent":["/* Login Actions */\r\nexport const updateLoginFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_LOGIN_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\nexport const setRegistrationMode = () => {\r\n  return {\r\n    type: 'SET_REGISTRATION_MODE'\r\n  }\r\n}\r\n\r\nexport const registerUser = (dispatch, username, password, email) => {\r\n  return {\r\n    type: 'REGISTER_USER',\r\n    dispatch,\r\n    username,\r\n    password,\r\n    email\r\n  }\r\n}\r\n\r\nexport const loginToApp = (dispatch, username, password, loginstate) => {\r\n  return {\r\n  type: 'LOGIN_TO_APP',\r\n  dispatch, username, password, loginstate\r\n  }\r\n} \r\n\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n  type: 'LOG_OUT',\r\n  dispatch\r\n  }\r\n} \r\n\r\nexport const getJWTToken = (dispatch, username, password) => {\r\n  return {\r\n  type: 'GET_JWT_TOKEN',\r\n  dispatch, \r\n  username, \r\n  password\r\n  }\r\n}\r\n\r\n\r\nexport const loginSucceeded = (token) => {\r\n  return {\r\n  type: 'LOGIN_SUCCESS',\r\n  token\r\n  }\r\n}\r\n\r\n\r\nexport const loginFailed = () => {\r\n  return {\r\n  type: 'LOGIN_FAILED'\r\n  }\r\n}\r\n\r\n/* REGISTRATION ACTIONS */\r\nexport const applyRegistrationsUpdate = (registrations) => {\r\n  return {\r\n    type: 'APPLY_REGISTRATIONS_UPDATE',\r\n    registrations\r\n  }\r\n}\r\n\r\nexport const selectRegistration = (registration) => {\r\n  return {\r\n  type: 'SELECT_REGISTRATION',\r\n  registration\r\n  }\r\n} \r\n\r\nexport const addRegistration = (registration) => {\r\n  return {\r\n  type: 'ADD_REGISTRATION',\r\n  registration\r\n  }\r\n}\r\n\r\nexport const getRegistrations = (dispatch) => {\r\n  return {\r\n  type: 'GET_REGISTRATIONS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteRegistration = (registration) => {\r\n  return {\r\n  type: 'DELETE_REGISTRATION',\r\n  registration\r\n  }\r\n}\r\n\r\nexport const addRegistrationInit = (registration) => {\r\n  return {\r\n    type: 'ADD_REGISTRATION_INIT',\r\n    registration\r\n  }\r\n}\r\n\r\nexport const updateRegistrationFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_REGISTRATION_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateRegistrationFormUsage = (usage, registration) => {\r\n  return {\r\n    type: 'UPDATE_REGISTRATION_FORM_USAGE',\r\n    usage: usage,\r\n    registration: registration\r\n  }\r\n}\r\n\r\n\r\n/* EVENT ACTIONS */\r\nexport const applyEventsUpdate = (events) => {\r\n  return {\r\n    type: 'APPLY_EVENTS_UPDATE',\r\n    events\r\n  }\r\n}\r\n\r\nexport const selectEvent = (event) => {\r\n  return {\r\n  type: 'SELECT_EVENT',\r\n  event\r\n  }\r\n} \r\n\r\nexport const addEvent = (event) => {\r\n  return {\r\n  type: 'ADD_EVENT',\r\n  event\r\n  }\r\n}\r\n\r\nexport const getEvents = (dispatch) => {\r\n  return {\r\n  type: 'GET_EVENTS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteEvent = (event) => {\r\n  return {\r\n  type: 'DELETE_EVENT',\r\n  event\r\n  }\r\n}\r\n\r\nexport const addEventInit = (event) => {\r\n  return {\r\n    type: 'ADD_EVENT_INIT',\r\n    event\r\n  }\r\n}\r\n\r\nexport const updateEventFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_EVENT_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateEventFormUsage = (usage, event) => {\r\n  return {\r\n    type: 'UPDATE_EVENT_FORM_USAGE',\r\n    usage: usage,\r\n    event: event\r\n  }\r\n}\r\n\r\n\r\n/* CUSTOMER ACTIONS */\r\nexport const applyCustomersUpdate = (customers) => {\r\n  return {\r\n    type: 'APPLY_CUSTOMERS_UPDATE',\r\n    customers\r\n  }\r\n}\r\n\r\nexport const selectCustomer = (customer) => {\r\n  return {\r\n  type: 'SELECT_CUSTOMER',\r\n  customer\r\n  }\r\n} \r\n\r\nexport const addCustomer = (customer) => {\r\n  return {\r\n  type: 'ADD_CUSTOMER',\r\n  customer\r\n  }\r\n}\r\n\r\nexport const getCustomers = (dispatch) => {\r\n  return {\r\n  type: 'GET_CUSTOMERS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteCustomer = (customer) => {\r\n  return {\r\n  type: 'DELETE_CUSTOMER',\r\n  customer\r\n  }\r\n}\r\n\r\nexport const addCustomerInit = (customer) => {\r\n  return {\r\n    type: 'ADD_CUSTOMER_INIT',\r\n    customer\r\n  }\r\n}\r\n\r\nexport const updateCustomerFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_CUSTOMER_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateCustomerFormUsage = (usage, customer) => {\r\n  return {\r\n    type: 'UPDATE_CUSTOMER_FORM_USAGE',\r\n    usage: usage,\r\n    customer: customer\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}