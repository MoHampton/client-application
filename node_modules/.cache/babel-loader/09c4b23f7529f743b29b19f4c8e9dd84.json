{"ast":null,"code":"var _jsxFileName = \"/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/RegistrationList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Registration from './Registration';\nimport { selectRegistration, updateRegistrationFormUsage, getRegistrations } from '../actions';\n\nclass RegistrationList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('in RegistrationList: ' + JSON.stringify(this.props.registrations));\n  }\n\n  componentDidMount() {\n    if (!this.props.fetched) {\n      this.props.fetchRules(this.props.fetched);\n    }\n\n    console.log('mount it!');\n  }\n\n  lookupEventTitle(event_id) {\n    for (let id in this.props.events) {\n      let item = this.props.events[id];\n\n      if (item.id === event_id) {\n        return item.title;\n      }\n    }\n\n    return 'event-title';\n  }\n\n  lookupCustomerName(customer_id) {\n    for (let id in this.props.customers) {\n      let customer = this.props.customers[id];\n\n      if (customer.id === customer_id) {\n        return customer.name;\n      }\n    }\n\n    return 'customer-name';\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"registration-list\",\n      className: \"card bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Event Registrations\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.registrations.map(registration => {\n      let event_name = this.lookupEventTitle(+registration.event_id);\n      let customer_name = this.lookupCustomerName(+registration.customer_id);\n      return React.createElement(Registration, {\n        key: registration.id,\n        registration: registration,\n        event_name: event_name,\n        customer_name: customer_name,\n        selectedId: this.props.appState.selectedId,\n        onClick: () => this.props.onRegistrationClick(registration),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        'paddingLeft': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        width: 'fit-content'\n      },\n      className: \"btn btn-primary\",\n      type: 'button',\n      onClick: this.props.handleNewRegistrationClick,\n      value: \"New Registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nRegistrationList.propTypes = {\n  registrations: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired\n  }).isRequired).isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(JSON.stringify(state.events));\n  return {\n    registrations: state.registrations,\n    appState: state.appState,\n    customers: state.customers,\n    events: state.events\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRules: fetched => {\n      console.log('in RegistrationList.fetchRules:');\n      dispatch(getRegistrations(dispatch));\n      fetched = true;\n    },\n    onRegistrationClick: registration => {\n      console.log('in RegistrationList.onRegistrationClick:' + JSON.stringify(registration));\n      dispatch(selectRegistration(registration));\n      dispatch(updateRegistrationFormUsage('view', registration));\n    },\n    handleNewRegistrationClick: () => {\n      console.log('in RegistrationList.handleNewRegistrationClick:');\n      dispatch(updateRegistrationFormUsage('add'));\n      dispatch(selectRegistration(-1));\n    }\n  };\n};\n\nconst VisibleRegistrationList = connect(mapStateToProps, mapDispatchToProps)(RegistrationList);\nexport default VisibleRegistrationList;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/RegistrationList.js"],"names":["React","connect","PropTypes","Registration","selectRegistration","updateRegistrationFormUsage","getRegistrations","RegistrationList","Component","constructor","props","console","log","JSON","stringify","registrations","componentDidMount","fetched","fetchRules","lookupEventTitle","event_id","id","events","item","title","lookupCustomerName","customer_id","customers","customer","name","render","map","registration","event_name","customer_name","appState","selectedId","onRegistrationClick","width","handleNewRegistrationClick","propTypes","arrayOf","shape","number","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","VisibleRegistrationList"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Registration from './Registration'\nimport { selectRegistration, updateRegistrationFormUsage, getRegistrations } from '../actions'\n\n\nclass RegistrationList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('in RegistrationList: ' + JSON.stringify(this.props.registrations));\n  }\n\n  componentDidMount() {\n    if (!this.props.fetched) {\n      this.props.fetchRules(this.props.fetched);\n    }\n    console.log('mount it!');\n  }\n\n  static propTypes = {\n    registrations: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired\n    }).isRequired).isRequired\n  }\n\n  lookupEventTitle( event_id ){\n    \n    for(let id in this.props.events){\n      let item = this.props.events[id];\n      if( item.id === event_id){\n        return item.title;\n      }\n    }\n    return 'event-title';\n  }\n\n  lookupCustomerName( customer_id ){\n    for(let id in this.props.customers){\n      let customer = this.props.customers[id];\n      if( customer.id === customer_id){\n        return customer.name;\n      }\n    }    \n    return 'customer-name';\n  }\n\n  render() {\n\n    return (\n      <div id='registration-list' className='card bg-light'  >\n        <h4 className='card-header' >Event Registrations</h4>\n        <table className='table'><tbody>\n          {this.props.registrations.map(registration => {\n            let event_name = this.lookupEventTitle(+registration.event_id);\n            let customer_name = this.lookupCustomerName(+registration.customer_id);\n            return (\n              <Registration\n                key={registration.id}\n                registration={registration}\n                event_name={event_name}\n                customer_name={customer_name}\n                selectedId={this.props.appState.selectedId}\n                onClick={() => this.props.onRegistrationClick(registration)}\n              />\n            );\n          }\n          )\n          }\n        </tbody></table>\n        <hr></hr>\n        <p style={{'paddingLeft':'10px'}}>\n        <input style={{width:'fit-content'}} className='btn btn-primary'  type={'button'} onClick={this.props.handleNewRegistrationClick} value=\"New Registration\" />\n          </p>         \n        \n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  console.log(JSON.stringify(state.events));\n  return {\n    registrations: state.registrations,\n    appState: state.appState,\n    customers: state.customers,\n    events: state.events\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRules: (fetched) => {\n      console.log('in RegistrationList.fetchRules:');\n      dispatch(getRegistrations(dispatch));\n      fetched = true;\n    },\n    onRegistrationClick: (registration) => {\n      console.log('in RegistrationList.onRegistrationClick:' + JSON.stringify(registration));\n      dispatch(selectRegistration(registration));\n      dispatch(updateRegistrationFormUsage('view', registration));\n    },\n    handleNewRegistrationClick: () => {\n      console.log('in RegistrationList.handleNewRegistrationClick:');\n      dispatch(updateRegistrationFormUsage('add'));\n      dispatch(selectRegistration(-1));\n    }\n  }\n}\n\nconst VisibleRegistrationList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegistrationList)\n\nexport default VisibleRegistrationList"]},"metadata":{},"sourceType":"module"}