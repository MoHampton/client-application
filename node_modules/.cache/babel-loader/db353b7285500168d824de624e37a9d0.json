{"ast":null,"code":"var _jsxFileName = \"/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/CustomerList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Customer from './Customer';\nimport { selectCustomer, updateCustomerFormUsage, getCustomers } from '../actions';\n\nclass CustomerList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('in EventList: ' + JSON.stringify(this.props.events));\n  }\n\n  componentDidMount() {\n    if (!this.props.fetched) {\n      this.props.fetchRules(this.props.fetched);\n    }\n\n    console.log('mount it!');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"customer-list\",\n      className: \"card bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"List of Users/Customers\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.customers.map(customer => React.createElement(Customer, {\n      key: customer.id,\n      customer: customer,\n      selectedId: this.props.appState.selectedId,\n      onClick: () => this.props.onCustomerClick(customer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        'paddingLeft': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        width: 'fit-content'\n      },\n      className: \"btn btn-primary\",\n      type: 'button',\n      onClick: this.props.handleNewCustomerClick,\n      value: \"New Customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCustomerList.propTypes = {\n  customers: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired\n  }).isRequired).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    customers: state.customers,\n    appState: state.appState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRules: fetched => {\n      console.log('in CustomerList.fetchRules:');\n      dispatch(getCustomers(dispatch));\n      fetched = true;\n    },\n    onCustomerClick: customer => {\n      console.log('in CustomerList.onCustomerClick:' + JSON.stringify(customer));\n      dispatch(selectCustomer(customer));\n      dispatch(updateCustomerFormUsage('view', customer));\n    },\n    handleNewCustomerClick: () => {\n      console.log('in CustomerList.handleNewCustomerClick:');\n      dispatch(updateCustomerFormUsage('add'));\n      dispatch(selectCustomer(-1));\n    }\n  };\n};\n\nconst VisibleCustomerList = connect(mapStateToProps, mapDispatchToProps)(CustomerList);\nexport default VisibleCustomerList;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/components/CustomerList.js"],"names":["React","connect","PropTypes","Customer","selectCustomer","updateCustomerFormUsage","getCustomers","CustomerList","Component","constructor","props","console","log","JSON","stringify","events","componentDidMount","fetched","fetchRules","render","customers","map","customer","id","appState","selectedId","onCustomerClick","width","handleNewCustomerClick","propTypes","arrayOf","shape","number","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","VisibleCustomerList"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Customer from './Customer'\nimport { selectCustomer, updateCustomerFormUsage, getCustomers } from '../actions'\n\nclass CustomerList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('in EventList: ' + JSON.stringify(this.props.events));\n  }\n\n  componentDidMount() {\n    if (!this.props.fetched) {\n      this.props.fetchRules(this.props.fetched);\n    }\n    console.log('mount it!');\n  }\n\n  static propTypes = {\n    customers: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired\n    }).isRequired).isRequired\n  }\n\n\n  render() {\n    return (\n      <div id='customer-list' className='card bg-light' >\n        <h4 className='card-header'>List of Users/Customers</h4>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.customers.map(customer =>\n              <Customer\n                key={customer.id}\n                customer={customer}\n                selectedId={this.props.appState.selectedId}\n                onClick={() => this.props.onCustomerClick(customer)}\n              />\n            )}\n          </tbody></table>\n          <hr></hr>\n          <p style={{'paddingLeft':'10px'}}>\n            <input style={{width:'fit-content'}} className='btn btn-primary' type={'button'} onClick={this.props.handleNewCustomerClick} value=\"New Customer\" />\n          </p>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    customers: state.customers,\n    appState: state.appState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchRules: (fetched) => {\n      console.log('in CustomerList.fetchRules:');\n      dispatch(getCustomers(dispatch));\n      fetched = true;\n    },\n    onCustomerClick: (customer) => {\n      console.log('in CustomerList.onCustomerClick:' + JSON.stringify(customer));\n      dispatch(selectCustomer(customer));\n      dispatch(updateCustomerFormUsage('view', customer));\n    },\n    handleNewCustomerClick: () => {\n      console.log('in CustomerList.handleNewCustomerClick:');\n      dispatch(updateCustomerFormUsage('add'));\n      dispatch(selectCustomer(-1));\n    }\n  }\n}\n\nconst VisibleCustomerList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerList)\n\nexport default VisibleCustomerList"]},"metadata":{},"sourceType":"module"}