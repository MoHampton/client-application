{"ast":null,"code":"const initial = {\n  selectedCustomerId: \"1\",\n  selectedCustomer: {}\n};\n\nconst appState = (state = initial, action, data) => {\n  switch (action.type) {\n    case 'SELECT_CUSTOMER':\n      {\n        let customer_copy = Object.assign({}, action.customer);\n        return Object.assign({}, {\n          selectedCustomerId: action.customer.id\n        }, {\n          selectedCustomer: customer_copy\n        });\n      }\n\n    case 'SELECT_EVENT':\n      {\n        let event_copy = Object.assign({}, action.event);\n        return Object.assign({}, {\n          selectedEventId: action.event.id\n        }, {\n          selectedEvent: event_copy\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appState;","map":{"version":3,"sources":["/Users/moxiehampton/IdeaProjects/Metropolitan-Covention-Center-Application/client-application/src/reducers/appState.js"],"names":["initial","selectedCustomerId","selectedCustomer","appState","state","action","data","type","customer_copy","Object","assign","customer","id","event_copy","event","selectedEventId","selectedEvent"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AAACC,EAAAA,kBAAkB,EAAC,GAApB;AAAyBC,EAAAA,gBAAgB,EAAC;AAA1C,CAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGJ,OAAT,EAAkBK,MAAlB,EAA0BC,IAA1B,KAAmC;AAEhD,UAAQD,MAAM,CAACE,IAAf;AACA,SAAK,iBAAL;AAAwB;AACpB,YAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACM,QAAzB,CAApB;AACA,eAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACT,UAAAA,kBAAkB,EAAEI,MAAM,CAACM,QAAP,CAAgBC;AAArC,SAAlB,EAA4D;AAACV,UAAAA,gBAAgB,EAAEM;AAAnB,SAA5D,CAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,YAAIK,UAAU,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACS,KAAzB,CAAjB;AACA,eAAOL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACK,UAAAA,eAAe,EAAEV,MAAM,CAACS,KAAP,CAAaF;AAA/B,SAAlB,EAAsD;AAACI,UAAAA,aAAa,EAAEH;AAAhB,SAAtD,CAAP;AACH;;AACD;AACI,aAAOT,KAAP;AAVJ;AAYH,CAdD;;AAgBA,eAAeD,QAAf","sourcesContent":["const initial = {selectedCustomerId:\"1\", selectedCustomer:{} };\r\n\r\nconst appState = (state = initial, action, data) => {\r\n\r\n    switch (action.type) {\r\n    case 'SELECT_CUSTOMER': {\r\n        let customer_copy = Object.assign({}, action.customer);\r\n        return Object.assign({}, {selectedCustomerId: action.customer.id}, {selectedCustomer: customer_copy });\r\n    }    \r\n    case 'SELECT_EVENT': {\r\n        let event_copy = Object.assign({}, action.event);\r\n        return Object.assign({}, {selectedEventId: action.event.id}, {selectedEvent: event_copy });\r\n    } \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default appState"]},"metadata":{},"sourceType":"module"}